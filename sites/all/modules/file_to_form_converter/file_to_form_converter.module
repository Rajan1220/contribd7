<?php 
/**
 * Implements hook_block_info().
 */
function file_to_form_converter_block_info() {
  $blocks = array();
  $blocks['file_to_form_converter'] = array(
    'info' => t('File To Form Converter'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function file_to_form_converter_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'file_to_form_converter':
      $block['subject'] = t('File To Form Converter');
      $block['content'] = drupal_get_form('file_to_form_converter_form');
      break;
  }
  return $block;
}

/**
 * Implements file_to_form_converter_form().
 */
function file_to_form_converter_form($form, &$form_state) {
  $form = array();
  $form['file-to-be-converted'] = array(
    '#type'   => "managed_file",
    '#title'  => t("Upload File To Convert"),
    '#descripion' => t("Only csv format File is allowed."),
    '#upload_location'    => "public://",
    "#upload_validators"  => array("file_validate_extensions" => array("csv")),
    '#required'=>TRUE,
  );
  $form['html_div'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="form_wrapper">',
    '#suffix' => '</div>',
  );
  $form['my_div'] = array(
    '#markup' => '<div id="myDiv"></div>',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Convert',
    '#attributes' => array('onclick' => 'return false;'),
    '#ajax' => array(
        'wrapper' => 'form_wrapper',
        'callback' => 'file_to_form_converter_callback',
      ) 
    );
  return $form;
}

/**
 * Implements hook_form_validate().
 */
function file_to_form_converter_form_validate($form, &$form_state) {
  $validator = array(
    'file_validate_is_image',
    'file_validate_extensions' => array('csv'),
  );
}

/**
 * Implements file_to_form_converter_callback().
 */
function file_to_form_converter_callback($form, &$form_state)  {
  $file_fid = $form_state['complete form']['file-to-be-converted']['#file']->fid;
  $file_name = $form_state['complete form']['file-to-be-converted']['#file']->filename;
  $file_type = $form_state['complete form']['file-to-be-converted']['#file']->filemime;
  $file_uri = $form_state['complete form']['file-to-be-converted']['#file']->uri;
  $file_size = $form_state['complete form']['file-to-be-converted']['#file']->filesize;
  $file_path = file_create_url($file_uri);
  $file_content = file($file_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
  $output = convert_file_to_table($file_path);
  ajax_command_append('#form_wrapper', $output);
  $commands[] = ajax_command_append('#form_wrapper ', $output);
  $res = array('#type' => 'ajax', '#commands' => $commands);
  ajax_deliver($res);
}

/**
 * Implements hook_form_submit().
 */
function file_to_form_converter_form_submit($form, &$form_state) {
  //drupal_set_message(t('File uploaded sucessfully !'));
}

/**
 * Function to read csv file.
 * @param
 * $file_path is full path for csv file.
 * @return
 * Table using theme(). 
 */
function convert_file_to_table($file_path) {
  $handle = fopen($file_path, "r");
  $all_rows = array();
  $header = null;
  while ($row = fgetcsv($handle)) {
    if ($header === null) {
      $header = $row;
      continue;
    }
    $all_rows[] = array_combine($header, $row);
  }
  $table = theme('table', array('header' => $header, 'rows' => $all_rows));
  return $table;
}